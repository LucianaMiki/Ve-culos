#pragma once

void show_menu() {
	cout << "************MENU**************" << endl;
	cout << "*    301 - Incluir veiculo " << endl;
	cout << "*    401 - Listar  veiculo " << endl;
	cout << "*    501 - Incluir utilizacao " << endl;
	cout << "*    601 - Listar utilizacao " << endl;
	cout << "*    701 - Incluir revisao " << endl;
	cout << "*    901 - Listar revisao " << endl;
	cout << "*    089 - Gerar relatorio " << endl;
	cout << "*    000 - Sair " << endl;
	cout << "*    Digite a opcao desejada: " << endl;
	cout << "******************************" << endl;
}
//--------------------------------------PARA RECEBER NUMERO E CARACTER---------------------------------------------//
int receberNumero() {
	int numero;
	cout << "Entre com um numero" << endl;
	cin >> numero;
	return numero;
}

char receberCaracter() {
	char entrada;
	cout << "Entre com um Caracter" << endl;
	cin >> entrada;
	return entrada;
}
//--------------------------------------------------VEÍCULOS------------------------------------------------------//
int include_veiculo(VEICULO vetor[TAMANHO], int posit)
{
	VEICULO v;
	cout << "Cadastro do carro na posicao " << posit << endl;
	cout << "Insira a placa do veiculo sem espacos" << endl;
	cin >> v.placa;
	cout << "Insira o modelo do veiculo sem espacos" << endl;
	cin >> v.modelo;

	vetor[posit] = v;
	posit++;
	return posit;
}

void exibir_veiculo(VEICULO vetor[TAMANHO], int i, int posit)
{
	if (i == posit) {
		cout << "------------------" << endl;
		return;
	}
	if (i == 0) {
		cout << "------------------" << endl;
	}
	VEICULO v = vetor[i];
	cout << "Posicao: " << i << endl;
	cout << "Placa: " << v.placa << endl;
	cout << "Modelo do veiculo: " << v.modelo << endl;
	exibir_veiculo(vetor, i + 1, posit);
}
//-----------------------------------------------------UTILIZAÇÃO----------------------------------------------------//
void incluir_utilizacao() {
	int PosicaoVeiculo, KmI, KmF;
	cout << "Digite a posicao do veiculo desejado: ";
	cin >> PosicaoVeiculo;
	cout << "Digite a quilometragem inicial: ";
	cin >> KmI;
	cout << "Digite a quilometragem final: ";
	cin >> KmF;

	listaUtilizacao[ut_posit].veiculo = PosicaoVeiculo;
	listaUtilizacao[ut_posit].kmInicial = KmI;
	listaUtilizacao[ut_posit].kmFinal = KmF;

	ut_posit++;
	total_km[PosicaoVeiculo] += (KmF - KmI);
	return;
}

void exibir_utilizacao(int i) {
	if (i == ut_posit) {
		return;
	}
	cout << "-----------------------------------" << endl;
	cout << "Posicao do carro: " << listaUtilizacao[i].veiculo << endl;

	cout << "Quilometragem inicial do carro: " << listaUtilizacao[i].kmInicial << endl;

	cout << "Quilometragem final do carro: " << listaUtilizacao[i].kmFinal << endl;
	cout << "-----------------------------------" << endl;

	exibir_utilizacao(i + 1);
}
//------------------------------------------------REVISÃO-------------------------------------------------------//
void incluir_revisao() {
	int dia, mes, ano, veiculo;
	cout << "Digite a posicao do veiculo desejado: ";
	cin >> veiculo;
	if (total_km[veiculo] >= 15000) {
		cout << "Digite o dia da ultima revisao: " << endl;
		dia = receberNumero();
		cout << "Digite o mes da ultima revisao: " << endl;
		mes = receberNumero();
		cout << "Digite o ano da ultima revisao: " << endl;
		ano = receberNumero();

		listaRevisao[rev_posit].veiculo = veiculo;
		listaRevisao[rev_posit].dia = dia;
		listaRevisao[rev_posit].mes = mes;
		listaRevisao[rev_posit].ano = ano;
		rev_posit++;
	}
	else {
		cout << "Nao eh necessaria a revisao" << endl;
		rev_posit++;
		return;
	}
}

void exibir_revisao(int i) {
	if (i == rev_posit) {
		cout << "------------------" << endl;
		return;
	}
	if (i == 0) {
		cout << "------------------" << endl;
	}

	cout << "Revisao " << i << " : " << endl;
	cout << "Carro na posicao: " << listaRevisao[i].veiculo << endl;
	cout << "Data da revisao: " << listaRevisao[i].dia << "/" << listaRevisao[i].mes << "/" << listaRevisao[i].ano << endl;
	exibir_revisao(i + 1);
}
//----------------------------------------------------RELATORIO-------------------------------------------------//
void gerar_relatorio(int i) {
	if (i == rev_posit) {
		return;
	}
	if (i >= 0) {
		cout << "________Relatorio Geral__________" << endl;
	}
	cout << "Carro na posicao " << i << " : " << endl;
	cout << "Placa: " << listaVeiculo[i].placa << endl;
	cout << "Modelo: " << listaVeiculo[i].modelo << endl;
	cout << "Total de km rodados: " << total_km[i] << endl;
	if (total_km[i] >= 15000) {
		cout << "Ultima revisao feita na data: " << listaRevisao[i].dia << "/";
		cout << listaRevisao[i].mes << "/";
		cout << listaRevisao[i].ano << endl;
		cout << "necessario renovar revisao!" << endl;
	}
	else {
		cout << "O carro nao passou por revisao por nao atingir a quilometragem limite" << endl;
	}
	gerar_relatorio(i + 1);
	return;
}
